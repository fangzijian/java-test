package com.fzj.utils;

import java.util.*;
import java.util.stream.Collectors;

public class byteTest {

    public static void main(String[] args) {
        String all = "1,2,3,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,31,32,33,34,35,36,37,39,40,42,43,44,1874,45,1021,1022,1023,1024,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1079,1080,1081,1083,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1103,1109,1110,1111,1112,1116,1117,1118,1119,1120,1121,1124,1128,1130,1131,1132,1168,1170,1171,1172,1173,1174,1175,1216,1218,1219,1221,1956,1248,1249,1250,1882,1251,1254,1255,1264,1276,1280,1281,1289,1377,1381,1383,1390,1391,1392,1393,1394,1395,1419,1420,1421,1422,1424,1426,1427,1428,1429,1430,1433,1432,1434,1435,1436,1437,1440,1441,1442,1443,1444,1447,1475,1517,1518,1528,1530,1533,1541,1548,1558,1559,1564,1565,1573,1617,1744,1753,1774,1783,1863,1870,1871,1873,1880,1881,1895,1896,1897,1908,1909,1910,1911,1912,1913,1914,1915,1940,1941,1946,1947,1949,1950,1953,1957,1958,1959,1961,1962,1963,1968,1969,1970,197";

        String suc = "1,2,3,4,5,6,7,12,13,14,15,16,17,18,19,21,22,23,31,32,33,34,35,36,37,39,40,1874,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1040,1041,1042,1043,1044,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1063,1064,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1079,1080,1081,1083,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1109,1110,1111,1112,1116,1117,1118,1119,1120,1121,1128,1130,1132,1168,1170,1171,1172,1173,1174,1175,1216,1218,1219,1221,1956,1248,1249,1250,1882,1251,1254,1255,1264,1276,1280,1281,1289,1377,1383,1421,1422,1424,1426,1427,1428,1429,1430,1433,1432,1434,1435,1436,1437,1440,1441,1442,1443,1447,1475,1530,1533,1541,1558,1559,1564,1565,1573,1744,1753,1774,1783,1863,1870,1873,1880,1881,1895,1897,1908,1909,1910,1911,1912,1913,1914,1915,1940,1941,1946,1947,1949,1950,1953,1957,1958,1959,1,1043,1071,1897,1908,1909,1910,1895,1911,1912,1913,1914,1915,31,32,33,1035,1054,1055,1056,1076,1077,1079,1882,1,3,4,5,6,18,19,21,22,23,1044,1063,1064,1076,1077,1,3,4,5,6,18,19,21,22,23,34,3";

        String[] split = all.split(",");
        String[] split1 = suc.split(",");


        List<String> strings = new ArrayList<>();
        for (String s : split) {
            strings.add(s);
        }


        Iterator<String> iterator = strings.iterator();
        while (iterator.hasNext()) {
            String next = iterator.next();
            for (String s : split1) {
                if (s.equals(next)) {
                    iterator.remove();
                    break;
                }
            }
        }
        System.out.println(strings.toString());

    }

    /**
     * 将int数值转换为占四个字节的byte数组，本方法适用于(低位在前，高位在后)的顺序。
     * @param value
     *            要转换的int值
     * @return byte数组
     */
    public static byte[] intToBytes(int value)
    {
        byte[] byte_src = new byte[4];
        byte_src[3] = (byte) ((value & 0xFF000000)>>24);
        byte_src[2] = (byte) ((value & 0x00FF0000)>>16);
        byte_src[1] = (byte) ((value & 0x0000FF00)>>8);
        byte_src[0] = (byte) ((value & 0x000000FF));
        return byte_src;
    }

    /**
     * byte数组中取int数值，本方法适用于(低位在前，高位在后)的顺序。
     *
     * @param ary
     *            byte数组
     * @param offset
     *            从数组的第offset位开始
     * @return int数值
     */
    public static int bytesToInt(byte[] ary, int offset) {
        int value;
        value = (int) ((ary[offset]&0xFF)
                | ((ary[offset+1]<<8) & 0xFF00)
                | ((ary[offset+2]<<16)& 0xFF0000)
                | ((ary[offset+3]<<24) & 0xFF000000));
        return value;
    }
}
